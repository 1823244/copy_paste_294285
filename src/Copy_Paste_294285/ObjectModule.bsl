
Функция ТочноеТекущееВремя() Экспорт 
	
	Script = Новый COMОбъект("MSScriptControl.ScriptControl");
	
	Script.Language = "javascript"; 
	
	Возврат Script.eval("new Date().getTime()")
	
КонецФункции

Функция ЧтениеТекстаМодуля(ИмяФайла, Нумератор, Ранг, След, ё = 0)
	
	Текст = Новый ЧтениеТекста(ИмяФайла);
	
	Пока Истина Цикл Строка = Текст.ПрочитатьСтроку();Если Строка = Неопределено Тогда Возврат ё КонецЕсли; ё = ё + 1; Суть = СокрЛП(Строка); Нумер = Нумератор[Суть]; Если Нумер = Неопределено Тогда Нумер = Нумератор.Количество(); Нумератор[Суть] = Нумер; След.Добавить(Новый Массив(1)) КонецЕсли; Ранг.Добавить(Нумер); След[Нумер].Добавить(Ранг.Количество() - 1) КонецЦикла
		                                                                                                                                                                                                                                                                                
КонецФункции

Функция ЧтениеМодулей(ПутьВыгрузки, Ранг, След) Экспорт
	
	Нумератор = Новый Соответствие;
	
	Модули.Очистить();
	
	Файлы = НайтиФайлы(ПутьВыгрузки, "*.txt");
	
	Для Каждого Файл Из Файлы Цикл
		
		Состояние("Обрабатывается " + Файл.Имя);
	
		НовыйМодуль = Модули.Добавить();
		
		НовыйМодуль.ИмяМодуля = Лев(Файл.Имя, СтрДлина(Файл.Имя) - 4);
		
		НовыйМодуль.Размер = ЧтениеТекстаМодуля(Файл.ПолноеИмя, Нумератор, Ранг, След)
	
	КонецЦикла;
	
	Возврат Нумератор.Количество()
	
КонецФункции

Процедура Перенумерация(Нумератор) Экспорт
	
	Список = Новый СписокЗначений;
	
	Для Каждого Элемент Из Нумератор Цикл
		
		Список.Добавить(Элемент.Ключ)
		
	КонецЦикла;
	
	Список.СортироватьПоЗначению();
	
	Для Каждого Элемент Из Список Цикл
		
		Нумератор[Элемент.Значение] = Список.Индекс(Элемент)	
		
	КонецЦикла
	
КонецПроцедуры

Процедура ПолучитьСуффиксныйМассив(Ранг, След, Охват = 1) Экспорт // по мотивам алгоритма Манбера и Майерса
	
	Верх = След.ВГраница();
	К = Ранг.Количество();
	
	Пока Верх < Ранг.ВГраница() Цикл
		
		Состояние("Построение суффиксного массива: " + Охват + " / " + К);
		
		Змея = Новый Массив(Верх + 1, 1);
		
		Для Каждого Шаг ИЗ След Цикл Для ж = 1 По Шаг.ВГраница() Цикл ё = Цел(Шаг[ж] - Охват + К) % К; Х = Ранг[Шаг[ж]]; Ящик = Змея[Ранг[ё]]; Если Ящик[0] = Х Тогда Ящик.Добавить(ё) Иначе Ящик.Добавить(ё + 0.1); Ящик[0] = Х КонецЕсли КонецЦикла КонецЦикла;
//		КонецЦикла КонецЦикла;
		
		Нумер = - 1;
		
		След.Очистить();
		
		След = Неопределено;
		
		Для Каждого Шаг Из Змея Цикл Для ж = 1 По Шаг.ВГраница() Цикл ё = Шаг[ж]; Если ё % 1 > 0 Тогда Нумер = Нумер + 1 КонецЕсли; Ранг[ё] = Нумер КонецЦикла КонецЦикла;
//		КонецЦикла КонецЦикла;

        Верх = Нумер;

		Охват = Охват * 2;
		
		След = Змея
		
	КонецЦикла
	
КонецПроцедуры

Процедура ПолучитьДлиныНаибольшихОбщихПрефиксов(Тень, Ранг, Путь, Рост, Плюс = 0) Экспорт // алгоритм Касаи
	
	Для ё = 0 По Ранг.ВГраница() Цикл Путь[Ранг[ё]] = ё	КонецЦикла;
	
	Для ё = 0 По Ранг.ВГраница() Цикл ж = ?(Ранг[ё] < Ранг.ВГраница(), Путь[Ранг[ё] + 1], Ранг.Количество()); Пока Макс(ё, ж) + Плюс < Тень.Количество() И Тень[ё + Плюс] = Тень[ж + Плюс] Цикл Плюс = Плюс + 1 КонецЦикла; Рост[ё] = Плюс; Плюс = Макс(0, Плюс - 1) КонецЦикла
	
КонецПроцедуры

Функция ОтборМестПовторов(Ранг, Путь, Рост) Экспорт
	
	Ответ = Повторы.ВыгрузитьКолонки();
	
	Для ё = 0 По Рост.ВГраница() Цикл у = Макс(0, ё - 1); ж = Мин(ё + 1, Рост.ВГраница()); Если Порог < Рост[ё] И Рост[у] <= Рост[ё] И Рост[ё] >= Рост[ж] Тогда Клон = Ответ.Добавить(); Клон.Место = ё; Клон.Рост = Рост[ё]; Клон.Копия = Путь[Ранг[ё] + 1]КонецЕсли КонецЦикла;
	
	Возврат Ответ
	
КонецФункции

Функция ОтносительноМодуля(Знач Место)
	
	//Таблица = Модули.Выгрузить();
	
	Для Каждого Строка Из Модули Цикл
		
		Если Строка.Размер >= Место + 1 Тогда
			Возврат Новый Структура("Файл, Строка", Строка.ИмяМодуля, Место + 1)
		КонецЕсли;
		
		Место = Место - Строка.Размер
			
	КонецЦикла
	
КонецФункции

Функция Расшифровка(Повтор) Экспорт
	
	Модуль1 = ОтносительноМодуля(Повтор.Место);
	Модуль2 = ОтносительноМодуля(Повтор.Копия);
	
	Детали = Новый Структура;
	
	Детали.Вставить("Файл1", Модуль1.Файл);
	Детали.Вставить("Строка1", Модуль1.Строка);
	
	Детали.Вставить("Файл2", Модуль2.Файл);
	Детали.Вставить("Строка2", Модуль2.Строка);
	
	ТекстМодуля = Новый ЧтениеТекста(ПутьВыгрузки + "\" + Модуль1.Файл + ".txt");
	
	Строки = ТекстМодуля.Прочитать();
	Текст = "";
	
	Для ё = 0 По Повтор.Рост - 1 Цикл
		
		Текст = Текст + СтрПолучитьСтроку(Строки, Модуль1.Строка + ё) + Символы.ПС
		
	КонецЦикла;
	
	Детали.Вставить("Текст", Текст);
	
	Возврат Детали
	
КонецФункции